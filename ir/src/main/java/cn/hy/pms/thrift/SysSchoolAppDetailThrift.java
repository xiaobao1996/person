/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package cn.hy.pms.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
/**
 * 学校应用订购信息
 * 
 */
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2020-03-04")
public class SysSchoolAppDetailThrift implements org.apache.thrift.TBase<SysSchoolAppDetailThrift, SysSchoolAppDetailThrift._Fields>, java.io.Serializable, Cloneable, Comparable<SysSchoolAppDetailThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SysSchoolAppDetailThrift");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField SCHOOL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("schoolId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField APP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("appId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField EXPIRE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("expireTime", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField EXPIRED_FIELD_DESC = new org.apache.thrift.protocol.TField("expired", org.apache.thrift.protocol.TType.BOOL, (short)5);
  private static final org.apache.thrift.protocol.TField APP_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("appName", org.apache.thrift.protocol.TType.STRING, (short)6);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SysSchoolAppDetailThriftStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SysSchoolAppDetailThriftTupleSchemeFactory();

  /**
   * 主键
   */
  public java.lang.String id; // optional
  /**
   * 学校id
   */
  public java.lang.String schoolId; // optional
  /**
   * 应用id
   */
  public java.lang.String appId; // optional
  /**
   * 过期时间
   */
  public java.lang.String expireTime; // optional
  /**
   * 是否已经过期
   * 
   */
  public boolean expired; // optional
  /**
   * 应用名称
   */
  public java.lang.String appName; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 主键
     */
    ID((short)1, "id"),
    /**
     * 学校id
     */
    SCHOOL_ID((short)2, "schoolId"),
    /**
     * 应用id
     */
    APP_ID((short)3, "appId"),
    /**
     * 过期时间
     */
    EXPIRE_TIME((short)4, "expireTime"),
    /**
     * 是否已经过期
     * 
     */
    EXPIRED((short)5, "expired"),
    /**
     * 应用名称
     */
    APP_NAME((short)6, "appName");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // SCHOOL_ID
          return SCHOOL_ID;
        case 3: // APP_ID
          return APP_ID;
        case 4: // EXPIRE_TIME
          return EXPIRE_TIME;
        case 5: // EXPIRED
          return EXPIRED;
        case 6: // APP_NAME
          return APP_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __EXPIRED_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.SCHOOL_ID,_Fields.APP_ID,_Fields.EXPIRE_TIME,_Fields.EXPIRED,_Fields.APP_NAME};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SCHOOL_ID, new org.apache.thrift.meta_data.FieldMetaData("schoolId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APP_ID, new org.apache.thrift.meta_data.FieldMetaData("appId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXPIRE_TIME, new org.apache.thrift.meta_data.FieldMetaData("expireTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXPIRED, new org.apache.thrift.meta_data.FieldMetaData("expired", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.APP_NAME, new org.apache.thrift.meta_data.FieldMetaData("appName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SysSchoolAppDetailThrift.class, metaDataMap);
  }

  public SysSchoolAppDetailThrift() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SysSchoolAppDetailThrift(SysSchoolAppDetailThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = other.id;
    }
    if (other.isSetSchoolId()) {
      this.schoolId = other.schoolId;
    }
    if (other.isSetAppId()) {
      this.appId = other.appId;
    }
    if (other.isSetExpireTime()) {
      this.expireTime = other.expireTime;
    }
    this.expired = other.expired;
    if (other.isSetAppName()) {
      this.appName = other.appName;
    }
  }

  public SysSchoolAppDetailThrift deepCopy() {
    return new SysSchoolAppDetailThrift(this);
  }

  @Override
  public void clear() {
    this.id = null;
    this.schoolId = null;
    this.appId = null;
    this.expireTime = null;
    setExpiredIsSet(false);
    this.expired = false;
    this.appName = null;
  }

  /**
   * 主键
   */
  public java.lang.String getId() {
    return this.id;
  }

  /**
   * 主键
   */
  public SysSchoolAppDetailThrift setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  /**
   * 学校id
   */
  public java.lang.String getSchoolId() {
    return this.schoolId;
  }

  /**
   * 学校id
   */
  public SysSchoolAppDetailThrift setSchoolId(java.lang.String schoolId) {
    this.schoolId = schoolId;
    return this;
  }

  public void unsetSchoolId() {
    this.schoolId = null;
  }

  /** Returns true if field schoolId is set (has been assigned a value) and false otherwise */
  public boolean isSetSchoolId() {
    return this.schoolId != null;
  }

  public void setSchoolIdIsSet(boolean value) {
    if (!value) {
      this.schoolId = null;
    }
  }

  /**
   * 应用id
   */
  public java.lang.String getAppId() {
    return this.appId;
  }

  /**
   * 应用id
   */
  public SysSchoolAppDetailThrift setAppId(java.lang.String appId) {
    this.appId = appId;
    return this;
  }

  public void unsetAppId() {
    this.appId = null;
  }

  /** Returns true if field appId is set (has been assigned a value) and false otherwise */
  public boolean isSetAppId() {
    return this.appId != null;
  }

  public void setAppIdIsSet(boolean value) {
    if (!value) {
      this.appId = null;
    }
  }

  /**
   * 过期时间
   */
  public java.lang.String getExpireTime() {
    return this.expireTime;
  }

  /**
   * 过期时间
   */
  public SysSchoolAppDetailThrift setExpireTime(java.lang.String expireTime) {
    this.expireTime = expireTime;
    return this;
  }

  public void unsetExpireTime() {
    this.expireTime = null;
  }

  /** Returns true if field expireTime is set (has been assigned a value) and false otherwise */
  public boolean isSetExpireTime() {
    return this.expireTime != null;
  }

  public void setExpireTimeIsSet(boolean value) {
    if (!value) {
      this.expireTime = null;
    }
  }

  /**
   * 是否已经过期
   * 
   */
  public boolean isExpired() {
    return this.expired;
  }

  /**
   * 是否已经过期
   * 
   */
  public SysSchoolAppDetailThrift setExpired(boolean expired) {
    this.expired = expired;
    setExpiredIsSet(true);
    return this;
  }

  public void unsetExpired() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EXPIRED_ISSET_ID);
  }

  /** Returns true if field expired is set (has been assigned a value) and false otherwise */
  public boolean isSetExpired() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EXPIRED_ISSET_ID);
  }

  public void setExpiredIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EXPIRED_ISSET_ID, value);
  }

  /**
   * 应用名称
   */
  public java.lang.String getAppName() {
    return this.appName;
  }

  /**
   * 应用名称
   */
  public SysSchoolAppDetailThrift setAppName(java.lang.String appName) {
    this.appName = appName;
    return this;
  }

  public void unsetAppName() {
    this.appName = null;
  }

  /** Returns true if field appName is set (has been assigned a value) and false otherwise */
  public boolean isSetAppName() {
    return this.appName != null;
  }

  public void setAppNameIsSet(boolean value) {
    if (!value) {
      this.appName = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.String)value);
      }
      break;

    case SCHOOL_ID:
      if (value == null) {
        unsetSchoolId();
      } else {
        setSchoolId((java.lang.String)value);
      }
      break;

    case APP_ID:
      if (value == null) {
        unsetAppId();
      } else {
        setAppId((java.lang.String)value);
      }
      break;

    case EXPIRE_TIME:
      if (value == null) {
        unsetExpireTime();
      } else {
        setExpireTime((java.lang.String)value);
      }
      break;

    case EXPIRED:
      if (value == null) {
        unsetExpired();
      } else {
        setExpired((java.lang.Boolean)value);
      }
      break;

    case APP_NAME:
      if (value == null) {
        unsetAppName();
      } else {
        setAppName((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case SCHOOL_ID:
      return getSchoolId();

    case APP_ID:
      return getAppId();

    case EXPIRE_TIME:
      return getExpireTime();

    case EXPIRED:
      return isExpired();

    case APP_NAME:
      return getAppName();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case SCHOOL_ID:
      return isSetSchoolId();
    case APP_ID:
      return isSetAppId();
    case EXPIRE_TIME:
      return isSetExpireTime();
    case EXPIRED:
      return isSetExpired();
    case APP_NAME:
      return isSetAppName();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof SysSchoolAppDetailThrift)
      return this.equals((SysSchoolAppDetailThrift)that);
    return false;
  }

  public boolean equals(SysSchoolAppDetailThrift that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_schoolId = true && this.isSetSchoolId();
    boolean that_present_schoolId = true && that.isSetSchoolId();
    if (this_present_schoolId || that_present_schoolId) {
      if (!(this_present_schoolId && that_present_schoolId))
        return false;
      if (!this.schoolId.equals(that.schoolId))
        return false;
    }

    boolean this_present_appId = true && this.isSetAppId();
    boolean that_present_appId = true && that.isSetAppId();
    if (this_present_appId || that_present_appId) {
      if (!(this_present_appId && that_present_appId))
        return false;
      if (!this.appId.equals(that.appId))
        return false;
    }

    boolean this_present_expireTime = true && this.isSetExpireTime();
    boolean that_present_expireTime = true && that.isSetExpireTime();
    if (this_present_expireTime || that_present_expireTime) {
      if (!(this_present_expireTime && that_present_expireTime))
        return false;
      if (!this.expireTime.equals(that.expireTime))
        return false;
    }

    boolean this_present_expired = true && this.isSetExpired();
    boolean that_present_expired = true && that.isSetExpired();
    if (this_present_expired || that_present_expired) {
      if (!(this_present_expired && that_present_expired))
        return false;
      if (this.expired != that.expired)
        return false;
    }

    boolean this_present_appName = true && this.isSetAppName();
    boolean that_present_appName = true && that.isSetAppName();
    if (this_present_appName || that_present_appName) {
      if (!(this_present_appName && that_present_appName))
        return false;
      if (!this.appName.equals(that.appName))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id.hashCode();

    hashCode = hashCode * 8191 + ((isSetSchoolId()) ? 131071 : 524287);
    if (isSetSchoolId())
      hashCode = hashCode * 8191 + schoolId.hashCode();

    hashCode = hashCode * 8191 + ((isSetAppId()) ? 131071 : 524287);
    if (isSetAppId())
      hashCode = hashCode * 8191 + appId.hashCode();

    hashCode = hashCode * 8191 + ((isSetExpireTime()) ? 131071 : 524287);
    if (isSetExpireTime())
      hashCode = hashCode * 8191 + expireTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetExpired()) ? 131071 : 524287);
    if (isSetExpired())
      hashCode = hashCode * 8191 + ((expired) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetAppName()) ? 131071 : 524287);
    if (isSetAppName())
      hashCode = hashCode * 8191 + appName.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(SysSchoolAppDetailThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSchoolId()).compareTo(other.isSetSchoolId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSchoolId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.schoolId, other.schoolId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAppId()).compareTo(other.isSetAppId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appId, other.appId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExpireTime()).compareTo(other.isSetExpireTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpireTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.expireTime, other.expireTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExpired()).compareTo(other.isSetExpired());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpired()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.expired, other.expired);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAppName()).compareTo(other.isSetAppName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appName, other.appName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SysSchoolAppDetailThrift(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      if (this.id == null) {
        sb.append("null");
      } else {
        sb.append(this.id);
      }
      first = false;
    }
    if (isSetSchoolId()) {
      if (!first) sb.append(", ");
      sb.append("schoolId:");
      if (this.schoolId == null) {
        sb.append("null");
      } else {
        sb.append(this.schoolId);
      }
      first = false;
    }
    if (isSetAppId()) {
      if (!first) sb.append(", ");
      sb.append("appId:");
      if (this.appId == null) {
        sb.append("null");
      } else {
        sb.append(this.appId);
      }
      first = false;
    }
    if (isSetExpireTime()) {
      if (!first) sb.append(", ");
      sb.append("expireTime:");
      if (this.expireTime == null) {
        sb.append("null");
      } else {
        sb.append(this.expireTime);
      }
      first = false;
    }
    if (isSetExpired()) {
      if (!first) sb.append(", ");
      sb.append("expired:");
      sb.append(this.expired);
      first = false;
    }
    if (isSetAppName()) {
      if (!first) sb.append(", ");
      sb.append("appName:");
      if (this.appName == null) {
        sb.append("null");
      } else {
        sb.append(this.appName);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SysSchoolAppDetailThriftStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SysSchoolAppDetailThriftStandardScheme getScheme() {
      return new SysSchoolAppDetailThriftStandardScheme();
    }
  }

  private static class SysSchoolAppDetailThriftStandardScheme extends org.apache.thrift.scheme.StandardScheme<SysSchoolAppDetailThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SysSchoolAppDetailThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SCHOOL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.schoolId = iprot.readString();
              struct.setSchoolIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // APP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appId = iprot.readString();
              struct.setAppIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // EXPIRE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.expireTime = iprot.readString();
              struct.setExpireTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // EXPIRED
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.expired = iprot.readBool();
              struct.setExpiredIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // APP_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appName = iprot.readString();
              struct.setAppNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SysSchoolAppDetailThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        if (struct.isSetId()) {
          oprot.writeFieldBegin(ID_FIELD_DESC);
          oprot.writeString(struct.id);
          oprot.writeFieldEnd();
        }
      }
      if (struct.schoolId != null) {
        if (struct.isSetSchoolId()) {
          oprot.writeFieldBegin(SCHOOL_ID_FIELD_DESC);
          oprot.writeString(struct.schoolId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.appId != null) {
        if (struct.isSetAppId()) {
          oprot.writeFieldBegin(APP_ID_FIELD_DESC);
          oprot.writeString(struct.appId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.expireTime != null) {
        if (struct.isSetExpireTime()) {
          oprot.writeFieldBegin(EXPIRE_TIME_FIELD_DESC);
          oprot.writeString(struct.expireTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetExpired()) {
        oprot.writeFieldBegin(EXPIRED_FIELD_DESC);
        oprot.writeBool(struct.expired);
        oprot.writeFieldEnd();
      }
      if (struct.appName != null) {
        if (struct.isSetAppName()) {
          oprot.writeFieldBegin(APP_NAME_FIELD_DESC);
          oprot.writeString(struct.appName);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SysSchoolAppDetailThriftTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SysSchoolAppDetailThriftTupleScheme getScheme() {
      return new SysSchoolAppDetailThriftTupleScheme();
    }
  }

  private static class SysSchoolAppDetailThriftTupleScheme extends org.apache.thrift.scheme.TupleScheme<SysSchoolAppDetailThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SysSchoolAppDetailThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetSchoolId()) {
        optionals.set(1);
      }
      if (struct.isSetAppId()) {
        optionals.set(2);
      }
      if (struct.isSetExpireTime()) {
        optionals.set(3);
      }
      if (struct.isSetExpired()) {
        optionals.set(4);
      }
      if (struct.isSetAppName()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
      if (struct.isSetSchoolId()) {
        oprot.writeString(struct.schoolId);
      }
      if (struct.isSetAppId()) {
        oprot.writeString(struct.appId);
      }
      if (struct.isSetExpireTime()) {
        oprot.writeString(struct.expireTime);
      }
      if (struct.isSetExpired()) {
        oprot.writeBool(struct.expired);
      }
      if (struct.isSetAppName()) {
        oprot.writeString(struct.appName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SysSchoolAppDetailThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.schoolId = iprot.readString();
        struct.setSchoolIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.appId = iprot.readString();
        struct.setAppIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.expireTime = iprot.readString();
        struct.setExpireTimeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.expired = iprot.readBool();
        struct.setExpiredIsSet(true);
      }
      if (incoming.get(5)) {
        struct.appName = iprot.readString();
        struct.setAppNameIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

