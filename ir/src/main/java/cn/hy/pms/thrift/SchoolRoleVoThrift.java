/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package cn.hy.pms.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
/**
 * 学校 角色vo
 * 
 */
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2020-03-04")
public class SchoolRoleVoThrift implements org.apache.thrift.TBase<SchoolRoleVoThrift, SchoolRoleVoThrift._Fields>, java.io.Serializable, Cloneable, Comparable<SchoolRoleVoThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SchoolRoleVoThrift");

  private static final org.apache.thrift.protocol.TField SCHOOL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("schoolId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField SCHOOL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("schoolName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ROLE_NAME_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("roleNameList", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField EXPIRED_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("expiredTime", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField EXPIRED_FIELD_DESC = new org.apache.thrift.protocol.TField("expired", org.apache.thrift.protocol.TType.BOOL, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SchoolRoleVoThriftStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SchoolRoleVoThriftTupleSchemeFactory();

  /**
   * 学校id
   * 
   */
  public java.lang.String schoolId; // optional
  /**
   * 学校名称
   * 
   */
  public java.lang.String schoolName; // optional
  /**
   * 角色名称集合
   * 
   */
  public java.util.List<java.lang.String> roleNameList; // optional
  /**
   * 过期时间
   * 
   */
  public java.lang.String expiredTime; // required
  /**
   * 是否已经过期
   * 
   */
  public boolean expired; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 学校id
     * 
     */
    SCHOOL_ID((short)1, "schoolId"),
    /**
     * 学校名称
     * 
     */
    SCHOOL_NAME((short)2, "schoolName"),
    /**
     * 角色名称集合
     * 
     */
    ROLE_NAME_LIST((short)3, "roleNameList"),
    /**
     * 过期时间
     * 
     */
    EXPIRED_TIME((short)4, "expiredTime"),
    /**
     * 是否已经过期
     * 
     */
    EXPIRED((short)5, "expired");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SCHOOL_ID
          return SCHOOL_ID;
        case 2: // SCHOOL_NAME
          return SCHOOL_NAME;
        case 3: // ROLE_NAME_LIST
          return ROLE_NAME_LIST;
        case 4: // EXPIRED_TIME
          return EXPIRED_TIME;
        case 5: // EXPIRED
          return EXPIRED;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __EXPIRED_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.SCHOOL_ID,_Fields.SCHOOL_NAME,_Fields.ROLE_NAME_LIST};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SCHOOL_ID, new org.apache.thrift.meta_data.FieldMetaData("schoolId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SCHOOL_NAME, new org.apache.thrift.meta_data.FieldMetaData("schoolName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ROLE_NAME_LIST, new org.apache.thrift.meta_data.FieldMetaData("roleNameList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.EXPIRED_TIME, new org.apache.thrift.meta_data.FieldMetaData("expiredTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXPIRED, new org.apache.thrift.meta_data.FieldMetaData("expired", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SchoolRoleVoThrift.class, metaDataMap);
  }

  public SchoolRoleVoThrift() {
  }

  public SchoolRoleVoThrift(
    java.lang.String expiredTime,
    boolean expired)
  {
    this();
    this.expiredTime = expiredTime;
    this.expired = expired;
    setExpiredIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SchoolRoleVoThrift(SchoolRoleVoThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetSchoolId()) {
      this.schoolId = other.schoolId;
    }
    if (other.isSetSchoolName()) {
      this.schoolName = other.schoolName;
    }
    if (other.isSetRoleNameList()) {
      java.util.List<java.lang.String> __this__roleNameList = new java.util.ArrayList<java.lang.String>(other.roleNameList);
      this.roleNameList = __this__roleNameList;
    }
    if (other.isSetExpiredTime()) {
      this.expiredTime = other.expiredTime;
    }
    this.expired = other.expired;
  }

  public SchoolRoleVoThrift deepCopy() {
    return new SchoolRoleVoThrift(this);
  }

  @Override
  public void clear() {
    this.schoolId = null;
    this.schoolName = null;
    this.roleNameList = null;
    this.expiredTime = null;
    setExpiredIsSet(false);
    this.expired = false;
  }

  /**
   * 学校id
   * 
   */
  public java.lang.String getSchoolId() {
    return this.schoolId;
  }

  /**
   * 学校id
   * 
   */
  public SchoolRoleVoThrift setSchoolId(java.lang.String schoolId) {
    this.schoolId = schoolId;
    return this;
  }

  public void unsetSchoolId() {
    this.schoolId = null;
  }

  /** Returns true if field schoolId is set (has been assigned a value) and false otherwise */
  public boolean isSetSchoolId() {
    return this.schoolId != null;
  }

  public void setSchoolIdIsSet(boolean value) {
    if (!value) {
      this.schoolId = null;
    }
  }

  /**
   * 学校名称
   * 
   */
  public java.lang.String getSchoolName() {
    return this.schoolName;
  }

  /**
   * 学校名称
   * 
   */
  public SchoolRoleVoThrift setSchoolName(java.lang.String schoolName) {
    this.schoolName = schoolName;
    return this;
  }

  public void unsetSchoolName() {
    this.schoolName = null;
  }

  /** Returns true if field schoolName is set (has been assigned a value) and false otherwise */
  public boolean isSetSchoolName() {
    return this.schoolName != null;
  }

  public void setSchoolNameIsSet(boolean value) {
    if (!value) {
      this.schoolName = null;
    }
  }

  public int getRoleNameListSize() {
    return (this.roleNameList == null) ? 0 : this.roleNameList.size();
  }

  public java.util.Iterator<java.lang.String> getRoleNameListIterator() {
    return (this.roleNameList == null) ? null : this.roleNameList.iterator();
  }

  public void addToRoleNameList(java.lang.String elem) {
    if (this.roleNameList == null) {
      this.roleNameList = new java.util.ArrayList<java.lang.String>();
    }
    this.roleNameList.add(elem);
  }

  /**
   * 角色名称集合
   * 
   */
  public java.util.List<java.lang.String> getRoleNameList() {
    return this.roleNameList;
  }

  /**
   * 角色名称集合
   * 
   */
  public SchoolRoleVoThrift setRoleNameList(java.util.List<java.lang.String> roleNameList) {
    this.roleNameList = roleNameList;
    return this;
  }

  public void unsetRoleNameList() {
    this.roleNameList = null;
  }

  /** Returns true if field roleNameList is set (has been assigned a value) and false otherwise */
  public boolean isSetRoleNameList() {
    return this.roleNameList != null;
  }

  public void setRoleNameListIsSet(boolean value) {
    if (!value) {
      this.roleNameList = null;
    }
  }

  /**
   * 过期时间
   * 
   */
  public java.lang.String getExpiredTime() {
    return this.expiredTime;
  }

  /**
   * 过期时间
   * 
   */
  public SchoolRoleVoThrift setExpiredTime(java.lang.String expiredTime) {
    this.expiredTime = expiredTime;
    return this;
  }

  public void unsetExpiredTime() {
    this.expiredTime = null;
  }

  /** Returns true if field expiredTime is set (has been assigned a value) and false otherwise */
  public boolean isSetExpiredTime() {
    return this.expiredTime != null;
  }

  public void setExpiredTimeIsSet(boolean value) {
    if (!value) {
      this.expiredTime = null;
    }
  }

  /**
   * 是否已经过期
   * 
   */
  public boolean isExpired() {
    return this.expired;
  }

  /**
   * 是否已经过期
   * 
   */
  public SchoolRoleVoThrift setExpired(boolean expired) {
    this.expired = expired;
    setExpiredIsSet(true);
    return this;
  }

  public void unsetExpired() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EXPIRED_ISSET_ID);
  }

  /** Returns true if field expired is set (has been assigned a value) and false otherwise */
  public boolean isSetExpired() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EXPIRED_ISSET_ID);
  }

  public void setExpiredIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EXPIRED_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case SCHOOL_ID:
      if (value == null) {
        unsetSchoolId();
      } else {
        setSchoolId((java.lang.String)value);
      }
      break;

    case SCHOOL_NAME:
      if (value == null) {
        unsetSchoolName();
      } else {
        setSchoolName((java.lang.String)value);
      }
      break;

    case ROLE_NAME_LIST:
      if (value == null) {
        unsetRoleNameList();
      } else {
        setRoleNameList((java.util.List<java.lang.String>)value);
      }
      break;

    case EXPIRED_TIME:
      if (value == null) {
        unsetExpiredTime();
      } else {
        setExpiredTime((java.lang.String)value);
      }
      break;

    case EXPIRED:
      if (value == null) {
        unsetExpired();
      } else {
        setExpired((java.lang.Boolean)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case SCHOOL_ID:
      return getSchoolId();

    case SCHOOL_NAME:
      return getSchoolName();

    case ROLE_NAME_LIST:
      return getRoleNameList();

    case EXPIRED_TIME:
      return getExpiredTime();

    case EXPIRED:
      return isExpired();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case SCHOOL_ID:
      return isSetSchoolId();
    case SCHOOL_NAME:
      return isSetSchoolName();
    case ROLE_NAME_LIST:
      return isSetRoleNameList();
    case EXPIRED_TIME:
      return isSetExpiredTime();
    case EXPIRED:
      return isSetExpired();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof SchoolRoleVoThrift)
      return this.equals((SchoolRoleVoThrift)that);
    return false;
  }

  public boolean equals(SchoolRoleVoThrift that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_schoolId = true && this.isSetSchoolId();
    boolean that_present_schoolId = true && that.isSetSchoolId();
    if (this_present_schoolId || that_present_schoolId) {
      if (!(this_present_schoolId && that_present_schoolId))
        return false;
      if (!this.schoolId.equals(that.schoolId))
        return false;
    }

    boolean this_present_schoolName = true && this.isSetSchoolName();
    boolean that_present_schoolName = true && that.isSetSchoolName();
    if (this_present_schoolName || that_present_schoolName) {
      if (!(this_present_schoolName && that_present_schoolName))
        return false;
      if (!this.schoolName.equals(that.schoolName))
        return false;
    }

    boolean this_present_roleNameList = true && this.isSetRoleNameList();
    boolean that_present_roleNameList = true && that.isSetRoleNameList();
    if (this_present_roleNameList || that_present_roleNameList) {
      if (!(this_present_roleNameList && that_present_roleNameList))
        return false;
      if (!this.roleNameList.equals(that.roleNameList))
        return false;
    }

    boolean this_present_expiredTime = true && this.isSetExpiredTime();
    boolean that_present_expiredTime = true && that.isSetExpiredTime();
    if (this_present_expiredTime || that_present_expiredTime) {
      if (!(this_present_expiredTime && that_present_expiredTime))
        return false;
      if (!this.expiredTime.equals(that.expiredTime))
        return false;
    }

    boolean this_present_expired = true;
    boolean that_present_expired = true;
    if (this_present_expired || that_present_expired) {
      if (!(this_present_expired && that_present_expired))
        return false;
      if (this.expired != that.expired)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetSchoolId()) ? 131071 : 524287);
    if (isSetSchoolId())
      hashCode = hashCode * 8191 + schoolId.hashCode();

    hashCode = hashCode * 8191 + ((isSetSchoolName()) ? 131071 : 524287);
    if (isSetSchoolName())
      hashCode = hashCode * 8191 + schoolName.hashCode();

    hashCode = hashCode * 8191 + ((isSetRoleNameList()) ? 131071 : 524287);
    if (isSetRoleNameList())
      hashCode = hashCode * 8191 + roleNameList.hashCode();

    hashCode = hashCode * 8191 + ((isSetExpiredTime()) ? 131071 : 524287);
    if (isSetExpiredTime())
      hashCode = hashCode * 8191 + expiredTime.hashCode();

    hashCode = hashCode * 8191 + ((expired) ? 131071 : 524287);

    return hashCode;
  }

  @Override
  public int compareTo(SchoolRoleVoThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetSchoolId()).compareTo(other.isSetSchoolId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSchoolId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.schoolId, other.schoolId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSchoolName()).compareTo(other.isSetSchoolName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSchoolName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.schoolName, other.schoolName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRoleNameList()).compareTo(other.isSetRoleNameList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRoleNameList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.roleNameList, other.roleNameList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExpiredTime()).compareTo(other.isSetExpiredTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpiredTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.expiredTime, other.expiredTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExpired()).compareTo(other.isSetExpired());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpired()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.expired, other.expired);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SchoolRoleVoThrift(");
    boolean first = true;

    if (isSetSchoolId()) {
      sb.append("schoolId:");
      if (this.schoolId == null) {
        sb.append("null");
      } else {
        sb.append(this.schoolId);
      }
      first = false;
    }
    if (isSetSchoolName()) {
      if (!first) sb.append(", ");
      sb.append("schoolName:");
      if (this.schoolName == null) {
        sb.append("null");
      } else {
        sb.append(this.schoolName);
      }
      first = false;
    }
    if (isSetRoleNameList()) {
      if (!first) sb.append(", ");
      sb.append("roleNameList:");
      if (this.roleNameList == null) {
        sb.append("null");
      } else {
        sb.append(this.roleNameList);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("expiredTime:");
    if (this.expiredTime == null) {
      sb.append("null");
    } else {
      sb.append(this.expiredTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("expired:");
    sb.append(this.expired);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SchoolRoleVoThriftStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SchoolRoleVoThriftStandardScheme getScheme() {
      return new SchoolRoleVoThriftStandardScheme();
    }
  }

  private static class SchoolRoleVoThriftStandardScheme extends org.apache.thrift.scheme.StandardScheme<SchoolRoleVoThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SchoolRoleVoThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SCHOOL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.schoolId = iprot.readString();
              struct.setSchoolIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SCHOOL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.schoolName = iprot.readString();
              struct.setSchoolNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ROLE_NAME_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.roleNameList = new java.util.ArrayList<java.lang.String>(_list0.size);
                java.lang.String _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readString();
                  struct.roleNameList.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setRoleNameListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // EXPIRED_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.expiredTime = iprot.readString();
              struct.setExpiredTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // EXPIRED
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.expired = iprot.readBool();
              struct.setExpiredIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SchoolRoleVoThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.schoolId != null) {
        if (struct.isSetSchoolId()) {
          oprot.writeFieldBegin(SCHOOL_ID_FIELD_DESC);
          oprot.writeString(struct.schoolId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.schoolName != null) {
        if (struct.isSetSchoolName()) {
          oprot.writeFieldBegin(SCHOOL_NAME_FIELD_DESC);
          oprot.writeString(struct.schoolName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.roleNameList != null) {
        if (struct.isSetRoleNameList()) {
          oprot.writeFieldBegin(ROLE_NAME_LIST_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.roleNameList.size()));
            for (java.lang.String _iter3 : struct.roleNameList)
            {
              oprot.writeString(_iter3);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.expiredTime != null) {
        oprot.writeFieldBegin(EXPIRED_TIME_FIELD_DESC);
        oprot.writeString(struct.expiredTime);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(EXPIRED_FIELD_DESC);
      oprot.writeBool(struct.expired);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SchoolRoleVoThriftTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SchoolRoleVoThriftTupleScheme getScheme() {
      return new SchoolRoleVoThriftTupleScheme();
    }
  }

  private static class SchoolRoleVoThriftTupleScheme extends org.apache.thrift.scheme.TupleScheme<SchoolRoleVoThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SchoolRoleVoThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetSchoolId()) {
        optionals.set(0);
      }
      if (struct.isSetSchoolName()) {
        optionals.set(1);
      }
      if (struct.isSetRoleNameList()) {
        optionals.set(2);
      }
      if (struct.isSetExpiredTime()) {
        optionals.set(3);
      }
      if (struct.isSetExpired()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetSchoolId()) {
        oprot.writeString(struct.schoolId);
      }
      if (struct.isSetSchoolName()) {
        oprot.writeString(struct.schoolName);
      }
      if (struct.isSetRoleNameList()) {
        {
          oprot.writeI32(struct.roleNameList.size());
          for (java.lang.String _iter4 : struct.roleNameList)
          {
            oprot.writeString(_iter4);
          }
        }
      }
      if (struct.isSetExpiredTime()) {
        oprot.writeString(struct.expiredTime);
      }
      if (struct.isSetExpired()) {
        oprot.writeBool(struct.expired);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SchoolRoleVoThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.schoolId = iprot.readString();
        struct.setSchoolIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.schoolName = iprot.readString();
        struct.setSchoolNameIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.roleNameList = new java.util.ArrayList<java.lang.String>(_list5.size);
          java.lang.String _elem6;
          for (int _i7 = 0; _i7 < _list5.size; ++_i7)
          {
            _elem6 = iprot.readString();
            struct.roleNameList.add(_elem6);
          }
        }
        struct.setRoleNameListIsSet(true);
      }
      if (incoming.get(3)) {
        struct.expiredTime = iprot.readString();
        struct.setExpiredTimeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.expired = iprot.readBool();
        struct.setExpiredIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

