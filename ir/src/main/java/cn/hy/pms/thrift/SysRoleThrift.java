/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package cn.hy.pms.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
/**
 * 角色信息
 * 
 */
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2020-03-04")
public class SysRoleThrift implements org.apache.thrift.TBase<SysRoleThrift, SysRoleThrift._Fields>, java.io.Serializable, Cloneable, Comparable<SysRoleThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SysRoleThrift");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField ROLE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("roleName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField SORT_FIELD_DESC = new org.apache.thrift.protocol.TField("sort", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField REMARK_FIELD_DESC = new org.apache.thrift.protocol.TField("remark", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField SCHOOL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("schoolId", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField SCHOOL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("schoolName", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.BYTE, (short)7);
  private static final org.apache.thrift.protocol.TField GROUP_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("groupType", org.apache.thrift.protocol.TType.BYTE, (short)8);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SysRoleThriftStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SysRoleThriftTupleSchemeFactory();

  /**
   * 主键
   */
  public java.lang.String id; // optional
  /**
   * 角色名称
   */
  public java.lang.String roleName; // optional
  /**
   * 角色排序
   */
  public int sort; // optional
  /**
   * 备注
   */
  public java.lang.String remark; // optional
  /**
   * 学校id
   */
  public java.lang.String schoolId; // optional
  /**
   * 学校名称
   */
  public java.lang.String schoolName; // optional
  /**
   * 状态（1正常  2停用）
   */
  public byte status; // optional
  /**
   * 角色组类型 （0:其他，1:教师，2:家长，3:学生，4:行政人员）
   */
  public byte groupType; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 主键
     */
    ID((short)1, "id"),
    /**
     * 角色名称
     */
    ROLE_NAME((short)2, "roleName"),
    /**
     * 角色排序
     */
    SORT((short)3, "sort"),
    /**
     * 备注
     */
    REMARK((short)4, "remark"),
    /**
     * 学校id
     */
    SCHOOL_ID((short)5, "schoolId"),
    /**
     * 学校名称
     */
    SCHOOL_NAME((short)6, "schoolName"),
    /**
     * 状态（1正常  2停用）
     */
    STATUS((short)7, "status"),
    /**
     * 角色组类型 （0:其他，1:教师，2:家长，3:学生，4:行政人员）
     */
    GROUP_TYPE((short)8, "groupType");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // ROLE_NAME
          return ROLE_NAME;
        case 3: // SORT
          return SORT;
        case 4: // REMARK
          return REMARK;
        case 5: // SCHOOL_ID
          return SCHOOL_ID;
        case 6: // SCHOOL_NAME
          return SCHOOL_NAME;
        case 7: // STATUS
          return STATUS;
        case 8: // GROUP_TYPE
          return GROUP_TYPE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __SORT_ISSET_ID = 0;
  private static final int __STATUS_ISSET_ID = 1;
  private static final int __GROUPTYPE_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.ROLE_NAME,_Fields.SORT,_Fields.REMARK,_Fields.SCHOOL_ID,_Fields.SCHOOL_NAME,_Fields.STATUS,_Fields.GROUP_TYPE};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ROLE_NAME, new org.apache.thrift.meta_data.FieldMetaData("roleName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SORT, new org.apache.thrift.meta_data.FieldMetaData("sort", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REMARK, new org.apache.thrift.meta_data.FieldMetaData("remark", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SCHOOL_ID, new org.apache.thrift.meta_data.FieldMetaData("schoolId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SCHOOL_NAME, new org.apache.thrift.meta_data.FieldMetaData("schoolName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.GROUP_TYPE, new org.apache.thrift.meta_data.FieldMetaData("groupType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SysRoleThrift.class, metaDataMap);
  }

  public SysRoleThrift() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SysRoleThrift(SysRoleThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = other.id;
    }
    if (other.isSetRoleName()) {
      this.roleName = other.roleName;
    }
    this.sort = other.sort;
    if (other.isSetRemark()) {
      this.remark = other.remark;
    }
    if (other.isSetSchoolId()) {
      this.schoolId = other.schoolId;
    }
    if (other.isSetSchoolName()) {
      this.schoolName = other.schoolName;
    }
    this.status = other.status;
    this.groupType = other.groupType;
  }

  public SysRoleThrift deepCopy() {
    return new SysRoleThrift(this);
  }

  @Override
  public void clear() {
    this.id = null;
    this.roleName = null;
    setSortIsSet(false);
    this.sort = 0;
    this.remark = null;
    this.schoolId = null;
    this.schoolName = null;
    setStatusIsSet(false);
    this.status = 0;
    setGroupTypeIsSet(false);
    this.groupType = 0;
  }

  /**
   * 主键
   */
  public java.lang.String getId() {
    return this.id;
  }

  /**
   * 主键
   */
  public SysRoleThrift setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  /**
   * 角色名称
   */
  public java.lang.String getRoleName() {
    return this.roleName;
  }

  /**
   * 角色名称
   */
  public SysRoleThrift setRoleName(java.lang.String roleName) {
    this.roleName = roleName;
    return this;
  }

  public void unsetRoleName() {
    this.roleName = null;
  }

  /** Returns true if field roleName is set (has been assigned a value) and false otherwise */
  public boolean isSetRoleName() {
    return this.roleName != null;
  }

  public void setRoleNameIsSet(boolean value) {
    if (!value) {
      this.roleName = null;
    }
  }

  /**
   * 角色排序
   */
  public int getSort() {
    return this.sort;
  }

  /**
   * 角色排序
   */
  public SysRoleThrift setSort(int sort) {
    this.sort = sort;
    setSortIsSet(true);
    return this;
  }

  public void unsetSort() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SORT_ISSET_ID);
  }

  /** Returns true if field sort is set (has been assigned a value) and false otherwise */
  public boolean isSetSort() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SORT_ISSET_ID);
  }

  public void setSortIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SORT_ISSET_ID, value);
  }

  /**
   * 备注
   */
  public java.lang.String getRemark() {
    return this.remark;
  }

  /**
   * 备注
   */
  public SysRoleThrift setRemark(java.lang.String remark) {
    this.remark = remark;
    return this;
  }

  public void unsetRemark() {
    this.remark = null;
  }

  /** Returns true if field remark is set (has been assigned a value) and false otherwise */
  public boolean isSetRemark() {
    return this.remark != null;
  }

  public void setRemarkIsSet(boolean value) {
    if (!value) {
      this.remark = null;
    }
  }

  /**
   * 学校id
   */
  public java.lang.String getSchoolId() {
    return this.schoolId;
  }

  /**
   * 学校id
   */
  public SysRoleThrift setSchoolId(java.lang.String schoolId) {
    this.schoolId = schoolId;
    return this;
  }

  public void unsetSchoolId() {
    this.schoolId = null;
  }

  /** Returns true if field schoolId is set (has been assigned a value) and false otherwise */
  public boolean isSetSchoolId() {
    return this.schoolId != null;
  }

  public void setSchoolIdIsSet(boolean value) {
    if (!value) {
      this.schoolId = null;
    }
  }

  /**
   * 学校名称
   */
  public java.lang.String getSchoolName() {
    return this.schoolName;
  }

  /**
   * 学校名称
   */
  public SysRoleThrift setSchoolName(java.lang.String schoolName) {
    this.schoolName = schoolName;
    return this;
  }

  public void unsetSchoolName() {
    this.schoolName = null;
  }

  /** Returns true if field schoolName is set (has been assigned a value) and false otherwise */
  public boolean isSetSchoolName() {
    return this.schoolName != null;
  }

  public void setSchoolNameIsSet(boolean value) {
    if (!value) {
      this.schoolName = null;
    }
  }

  /**
   * 状态（1正常  2停用）
   */
  public byte getStatus() {
    return this.status;
  }

  /**
   * 状态（1正常  2停用）
   */
  public SysRoleThrift setStatus(byte status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  /**
   * 角色组类型 （0:其他，1:教师，2:家长，3:学生，4:行政人员）
   */
  public byte getGroupType() {
    return this.groupType;
  }

  /**
   * 角色组类型 （0:其他，1:教师，2:家长，3:学生，4:行政人员）
   */
  public SysRoleThrift setGroupType(byte groupType) {
    this.groupType = groupType;
    setGroupTypeIsSet(true);
    return this;
  }

  public void unsetGroupType() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __GROUPTYPE_ISSET_ID);
  }

  /** Returns true if field groupType is set (has been assigned a value) and false otherwise */
  public boolean isSetGroupType() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __GROUPTYPE_ISSET_ID);
  }

  public void setGroupTypeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __GROUPTYPE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.String)value);
      }
      break;

    case ROLE_NAME:
      if (value == null) {
        unsetRoleName();
      } else {
        setRoleName((java.lang.String)value);
      }
      break;

    case SORT:
      if (value == null) {
        unsetSort();
      } else {
        setSort((java.lang.Integer)value);
      }
      break;

    case REMARK:
      if (value == null) {
        unsetRemark();
      } else {
        setRemark((java.lang.String)value);
      }
      break;

    case SCHOOL_ID:
      if (value == null) {
        unsetSchoolId();
      } else {
        setSchoolId((java.lang.String)value);
      }
      break;

    case SCHOOL_NAME:
      if (value == null) {
        unsetSchoolName();
      } else {
        setSchoolName((java.lang.String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((java.lang.Byte)value);
      }
      break;

    case GROUP_TYPE:
      if (value == null) {
        unsetGroupType();
      } else {
        setGroupType((java.lang.Byte)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case ROLE_NAME:
      return getRoleName();

    case SORT:
      return getSort();

    case REMARK:
      return getRemark();

    case SCHOOL_ID:
      return getSchoolId();

    case SCHOOL_NAME:
      return getSchoolName();

    case STATUS:
      return getStatus();

    case GROUP_TYPE:
      return getGroupType();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case ROLE_NAME:
      return isSetRoleName();
    case SORT:
      return isSetSort();
    case REMARK:
      return isSetRemark();
    case SCHOOL_ID:
      return isSetSchoolId();
    case SCHOOL_NAME:
      return isSetSchoolName();
    case STATUS:
      return isSetStatus();
    case GROUP_TYPE:
      return isSetGroupType();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof SysRoleThrift)
      return this.equals((SysRoleThrift)that);
    return false;
  }

  public boolean equals(SysRoleThrift that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_roleName = true && this.isSetRoleName();
    boolean that_present_roleName = true && that.isSetRoleName();
    if (this_present_roleName || that_present_roleName) {
      if (!(this_present_roleName && that_present_roleName))
        return false;
      if (!this.roleName.equals(that.roleName))
        return false;
    }

    boolean this_present_sort = true && this.isSetSort();
    boolean that_present_sort = true && that.isSetSort();
    if (this_present_sort || that_present_sort) {
      if (!(this_present_sort && that_present_sort))
        return false;
      if (this.sort != that.sort)
        return false;
    }

    boolean this_present_remark = true && this.isSetRemark();
    boolean that_present_remark = true && that.isSetRemark();
    if (this_present_remark || that_present_remark) {
      if (!(this_present_remark && that_present_remark))
        return false;
      if (!this.remark.equals(that.remark))
        return false;
    }

    boolean this_present_schoolId = true && this.isSetSchoolId();
    boolean that_present_schoolId = true && that.isSetSchoolId();
    if (this_present_schoolId || that_present_schoolId) {
      if (!(this_present_schoolId && that_present_schoolId))
        return false;
      if (!this.schoolId.equals(that.schoolId))
        return false;
    }

    boolean this_present_schoolName = true && this.isSetSchoolName();
    boolean that_present_schoolName = true && that.isSetSchoolName();
    if (this_present_schoolName || that_present_schoolName) {
      if (!(this_present_schoolName && that_present_schoolName))
        return false;
      if (!this.schoolName.equals(that.schoolName))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_groupType = true && this.isSetGroupType();
    boolean that_present_groupType = true && that.isSetGroupType();
    if (this_present_groupType || that_present_groupType) {
      if (!(this_present_groupType && that_present_groupType))
        return false;
      if (this.groupType != that.groupType)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id.hashCode();

    hashCode = hashCode * 8191 + ((isSetRoleName()) ? 131071 : 524287);
    if (isSetRoleName())
      hashCode = hashCode * 8191 + roleName.hashCode();

    hashCode = hashCode * 8191 + ((isSetSort()) ? 131071 : 524287);
    if (isSetSort())
      hashCode = hashCode * 8191 + sort;

    hashCode = hashCode * 8191 + ((isSetRemark()) ? 131071 : 524287);
    if (isSetRemark())
      hashCode = hashCode * 8191 + remark.hashCode();

    hashCode = hashCode * 8191 + ((isSetSchoolId()) ? 131071 : 524287);
    if (isSetSchoolId())
      hashCode = hashCode * 8191 + schoolId.hashCode();

    hashCode = hashCode * 8191 + ((isSetSchoolName()) ? 131071 : 524287);
    if (isSetSchoolName())
      hashCode = hashCode * 8191 + schoolName.hashCode();

    hashCode = hashCode * 8191 + ((isSetStatus()) ? 131071 : 524287);
    if (isSetStatus())
      hashCode = hashCode * 8191 + (int) (status);

    hashCode = hashCode * 8191 + ((isSetGroupType()) ? 131071 : 524287);
    if (isSetGroupType())
      hashCode = hashCode * 8191 + (int) (groupType);

    return hashCode;
  }

  @Override
  public int compareTo(SysRoleThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRoleName()).compareTo(other.isSetRoleName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRoleName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.roleName, other.roleName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSort()).compareTo(other.isSetSort());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSort()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sort, other.sort);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRemark()).compareTo(other.isSetRemark());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemark()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.remark, other.remark);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSchoolId()).compareTo(other.isSetSchoolId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSchoolId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.schoolId, other.schoolId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSchoolName()).compareTo(other.isSetSchoolName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSchoolName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.schoolName, other.schoolName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetGroupType()).compareTo(other.isSetGroupType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGroupType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupType, other.groupType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SysRoleThrift(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      if (this.id == null) {
        sb.append("null");
      } else {
        sb.append(this.id);
      }
      first = false;
    }
    if (isSetRoleName()) {
      if (!first) sb.append(", ");
      sb.append("roleName:");
      if (this.roleName == null) {
        sb.append("null");
      } else {
        sb.append(this.roleName);
      }
      first = false;
    }
    if (isSetSort()) {
      if (!first) sb.append(", ");
      sb.append("sort:");
      sb.append(this.sort);
      first = false;
    }
    if (isSetRemark()) {
      if (!first) sb.append(", ");
      sb.append("remark:");
      if (this.remark == null) {
        sb.append("null");
      } else {
        sb.append(this.remark);
      }
      first = false;
    }
    if (isSetSchoolId()) {
      if (!first) sb.append(", ");
      sb.append("schoolId:");
      if (this.schoolId == null) {
        sb.append("null");
      } else {
        sb.append(this.schoolId);
      }
      first = false;
    }
    if (isSetSchoolName()) {
      if (!first) sb.append(", ");
      sb.append("schoolName:");
      if (this.schoolName == null) {
        sb.append("null");
      } else {
        sb.append(this.schoolName);
      }
      first = false;
    }
    if (isSetStatus()) {
      if (!first) sb.append(", ");
      sb.append("status:");
      sb.append(this.status);
      first = false;
    }
    if (isSetGroupType()) {
      if (!first) sb.append(", ");
      sb.append("groupType:");
      sb.append(this.groupType);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SysRoleThriftStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SysRoleThriftStandardScheme getScheme() {
      return new SysRoleThriftStandardScheme();
    }
  }

  private static class SysRoleThriftStandardScheme extends org.apache.thrift.scheme.StandardScheme<SysRoleThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SysRoleThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ROLE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.roleName = iprot.readString();
              struct.setRoleNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SORT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sort = iprot.readI32();
              struct.setSortIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // REMARK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.remark = iprot.readString();
              struct.setRemarkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SCHOOL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.schoolId = iprot.readString();
              struct.setSchoolIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SCHOOL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.schoolName = iprot.readString();
              struct.setSchoolNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.status = iprot.readByte();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // GROUP_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.groupType = iprot.readByte();
              struct.setGroupTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SysRoleThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        if (struct.isSetId()) {
          oprot.writeFieldBegin(ID_FIELD_DESC);
          oprot.writeString(struct.id);
          oprot.writeFieldEnd();
        }
      }
      if (struct.roleName != null) {
        if (struct.isSetRoleName()) {
          oprot.writeFieldBegin(ROLE_NAME_FIELD_DESC);
          oprot.writeString(struct.roleName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetSort()) {
        oprot.writeFieldBegin(SORT_FIELD_DESC);
        oprot.writeI32(struct.sort);
        oprot.writeFieldEnd();
      }
      if (struct.remark != null) {
        if (struct.isSetRemark()) {
          oprot.writeFieldBegin(REMARK_FIELD_DESC);
          oprot.writeString(struct.remark);
          oprot.writeFieldEnd();
        }
      }
      if (struct.schoolId != null) {
        if (struct.isSetSchoolId()) {
          oprot.writeFieldBegin(SCHOOL_ID_FIELD_DESC);
          oprot.writeString(struct.schoolId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.schoolName != null) {
        if (struct.isSetSchoolName()) {
          oprot.writeFieldBegin(SCHOOL_NAME_FIELD_DESC);
          oprot.writeString(struct.schoolName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStatus()) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeByte(struct.status);
        oprot.writeFieldEnd();
      }
      if (struct.isSetGroupType()) {
        oprot.writeFieldBegin(GROUP_TYPE_FIELD_DESC);
        oprot.writeByte(struct.groupType);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SysRoleThriftTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SysRoleThriftTupleScheme getScheme() {
      return new SysRoleThriftTupleScheme();
    }
  }

  private static class SysRoleThriftTupleScheme extends org.apache.thrift.scheme.TupleScheme<SysRoleThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SysRoleThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetRoleName()) {
        optionals.set(1);
      }
      if (struct.isSetSort()) {
        optionals.set(2);
      }
      if (struct.isSetRemark()) {
        optionals.set(3);
      }
      if (struct.isSetSchoolId()) {
        optionals.set(4);
      }
      if (struct.isSetSchoolName()) {
        optionals.set(5);
      }
      if (struct.isSetStatus()) {
        optionals.set(6);
      }
      if (struct.isSetGroupType()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
      if (struct.isSetRoleName()) {
        oprot.writeString(struct.roleName);
      }
      if (struct.isSetSort()) {
        oprot.writeI32(struct.sort);
      }
      if (struct.isSetRemark()) {
        oprot.writeString(struct.remark);
      }
      if (struct.isSetSchoolId()) {
        oprot.writeString(struct.schoolId);
      }
      if (struct.isSetSchoolName()) {
        oprot.writeString(struct.schoolName);
      }
      if (struct.isSetStatus()) {
        oprot.writeByte(struct.status);
      }
      if (struct.isSetGroupType()) {
        oprot.writeByte(struct.groupType);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SysRoleThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.roleName = iprot.readString();
        struct.setRoleNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.sort = iprot.readI32();
        struct.setSortIsSet(true);
      }
      if (incoming.get(3)) {
        struct.remark = iprot.readString();
        struct.setRemarkIsSet(true);
      }
      if (incoming.get(4)) {
        struct.schoolId = iprot.readString();
        struct.setSchoolIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.schoolName = iprot.readString();
        struct.setSchoolNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.status = iprot.readByte();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(7)) {
        struct.groupType = iprot.readByte();
        struct.setGroupTypeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

