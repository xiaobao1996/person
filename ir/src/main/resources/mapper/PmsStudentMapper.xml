<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hy.infoReport.common.mapper.PmsStudentMapper">
  <resultMap id="BaseResultMap" type="cn.hy.infoReport.common.entity.PmsStudent">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="class_id" jdbcType="VARCHAR" property="classId" />
    <result column="class_sort" jdbcType="INTEGER" property="classSort" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="class_code" jdbcType="VARCHAR" property="classCode" />
    <result column="school_id" jdbcType="VARCHAR" property="schoolId" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="sync_time" jdbcType="BIGINT" property="syncTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, name, class_id, class_sort, class_name, grade, class_code, school_id,
    update_at, sync_time
  </sql>
  <select id="selectByExample" parameterType="cn.hy.infoReport.common.entity.PmsStudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pms_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pms_student
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from pms_student
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.hy.infoReport.common.entity.PmsStudentExample">
    delete from pms_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hy.infoReport.common.entity.PmsStudent">
    insert into pms_student (id, user_id, name,
      class_id, class_sort, class_name,
      grade, class_code, school_id,
      update_at, sync_time)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{classId,jdbcType=VARCHAR}, #{classSort,jdbcType=INTEGER}, #{className,jdbcType=VARCHAR},
      #{grade,jdbcType=INTEGER}, #{classCode,jdbcType=VARCHAR}, #{schoolId,jdbcType=VARCHAR},
      #{updateAt,jdbcType=TIMESTAMP}, #{syncTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.hy.infoReport.common.entity.PmsStudent">
    insert into pms_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="classSort != null">
        class_sort,
      </if>
      <if test="className != null">
        class_name,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="classCode != null">
        class_code,
      </if>
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="syncTime != null">
        sync_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=VARCHAR},
      </if>
      <if test="classSort != null">
        #{classSort,jdbcType=INTEGER},
      </if>
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="classCode != null">
        #{classCode,jdbcType=VARCHAR},
      </if>
      <if test="schoolId != null">
        #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="syncTime != null">
        #{syncTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hy.infoReport.common.entity.PmsStudentExample" resultType="java.lang.Long">
    select count(*) from pms_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pms_student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=VARCHAR},
      </if>
      <if test="record.classSort != null">
        class_sort = #{record.classSort,jdbcType=INTEGER},
      </if>
      <if test="record.className != null">
        class_name = #{record.className,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.classCode != null">
        class_code = #{record.classCode,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolId != null">
        school_id = #{record.schoolId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.syncTime != null">
        sync_time = #{record.syncTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pms_student
    set id = #{record.id,jdbcType=VARCHAR},
    user_id = #{record.userId,jdbcType=VARCHAR},
    name = #{record.name,jdbcType=VARCHAR},
    class_id = #{record.classId,jdbcType=VARCHAR},
    class_sort = #{record.classSort,jdbcType=INTEGER},
    class_name = #{record.className,jdbcType=VARCHAR},
    grade = #{record.grade,jdbcType=INTEGER},
    class_code = #{record.classCode,jdbcType=VARCHAR},
    school_id = #{record.schoolId,jdbcType=VARCHAR},
    update_at = #{record.updateAt,jdbcType=TIMESTAMP},
    sync_time = #{record.syncTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hy.infoReport.common.entity.PmsStudent">
    update pms_student
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=VARCHAR},
      </if>
      <if test="classSort != null">
        class_sort = #{classSort,jdbcType=INTEGER},
      </if>
      <if test="className != null">
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="classCode != null">
        class_code = #{classCode,jdbcType=VARCHAR},
      </if>
      <if test="schoolId != null">
        school_id = #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="syncTime != null">
        sync_time = #{syncTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hy.infoReport.common.entity.PmsStudent">
    update pms_student
    set user_id = #{userId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=VARCHAR},
      class_sort = #{classSort,jdbcType=INTEGER},
      class_name = #{className,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=INTEGER},
      class_code = #{classCode,jdbcType=VARCHAR},
      school_id = #{schoolId,jdbcType=VARCHAR},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      sync_time = #{syncTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="findWithSortBySchoolId" resultType="cn.hy.infoReport.common.entity.PmsStudent">
    SELECT
        *,
        IF(
          class_code IS NOT NULL AND CHAR_LENGTH(class_code) != 0 AND (class_code REGEXP '^(-?[0-9]+)(\.[0-9]+)?$') = 1,
          CAST(class_code AS UNSIGNED INTEGER), null
        ) AS orderNumber
    FROM
        pms_student
    WHERE
        school_id = #{schoolId}
    ORDER BY  grade DESC, -orderNumber DESC, class_code, CONVERT(name USING gbk)
  </select>
</mapper>
