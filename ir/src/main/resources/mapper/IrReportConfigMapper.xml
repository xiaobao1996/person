<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hy.infoReport.common.mapper.IrReportConfigMapper">
  <resultMap id="BaseResultMap" type="cn.hy.infoReport.common.entity.IrReportConfig">
    <id column="school_id" jdbcType="VARCHAR" property="schoolId" />
    <result column="student_report_identify" jdbcType="VARCHAR" property="studentReportIdentify" />
    <result column="student_report_user_ids" jdbcType="VARCHAR" property="studentReportUserIds" />
    <result column="staff_report_identify" jdbcType="VARCHAR" property="staffReportIdentify" />
    <result column="staff_report_user_ids" jdbcType="VARCHAR" property="staffReportUserIds" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    school_id, student_report_identify, student_report_user_ids, staff_report_identify, 
    staff_report_user_ids, create_at, update_at
  </sql>
  <select id="selectByExample" parameterType="cn.hy.infoReport.common.entity.IrReportConfigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ir_report_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ir_report_config
    where school_id = #{schoolId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ir_report_config
    where school_id = #{schoolId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.hy.infoReport.common.entity.IrReportConfigExample">
    delete from ir_report_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hy.infoReport.common.entity.IrReportConfig">
    insert into ir_report_config (school_id, student_report_identify, 
      student_report_user_ids, staff_report_identify, 
      staff_report_user_ids, create_at, update_at
      )
    values (#{schoolId,jdbcType=VARCHAR}, #{studentReportIdentify,jdbcType=VARCHAR}, 
      #{studentReportUserIds,jdbcType=VARCHAR}, #{staffReportIdentify,jdbcType=VARCHAR}, 
      #{staffReportUserIds,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.hy.infoReport.common.entity.IrReportConfig">
    insert into ir_report_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="studentReportIdentify != null">
        student_report_identify,
      </if>
      <if test="studentReportUserIds != null">
        student_report_user_ids,
      </if>
      <if test="staffReportIdentify != null">
        staff_report_identify,
      </if>
      <if test="staffReportUserIds != null">
        staff_report_user_ids,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="schoolId != null">
        #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="studentReportIdentify != null">
        #{studentReportIdentify,jdbcType=VARCHAR},
      </if>
      <if test="studentReportUserIds != null">
        #{studentReportUserIds,jdbcType=VARCHAR},
      </if>
      <if test="staffReportIdentify != null">
        #{staffReportIdentify,jdbcType=VARCHAR},
      </if>
      <if test="staffReportUserIds != null">
        #{staffReportUserIds,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hy.infoReport.common.entity.IrReportConfigExample" resultType="java.lang.Long">
    select count(*) from ir_report_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ir_report_config
    <set>
      <if test="record.schoolId != null">
        school_id = #{record.schoolId,jdbcType=VARCHAR},
      </if>
      <if test="record.studentReportIdentify != null">
        student_report_identify = #{record.studentReportIdentify,jdbcType=VARCHAR},
      </if>
      <if test="record.studentReportUserIds != null">
        student_report_user_ids = #{record.studentReportUserIds,jdbcType=VARCHAR},
      </if>
      <if test="record.staffReportIdentify != null">
        staff_report_identify = #{record.staffReportIdentify,jdbcType=VARCHAR},
      </if>
      <if test="record.staffReportUserIds != null">
        staff_report_user_ids = #{record.staffReportUserIds,jdbcType=VARCHAR},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ir_report_config
    set school_id = #{record.schoolId,jdbcType=VARCHAR},
      student_report_identify = #{record.studentReportIdentify,jdbcType=VARCHAR},
      student_report_user_ids = #{record.studentReportUserIds,jdbcType=VARCHAR},
      staff_report_identify = #{record.staffReportIdentify,jdbcType=VARCHAR},
      staff_report_user_ids = #{record.staffReportUserIds,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hy.infoReport.common.entity.IrReportConfig">
    update ir_report_config
    <set>
      <if test="studentReportIdentify != null">
        student_report_identify = #{studentReportIdentify,jdbcType=VARCHAR},
      </if>
      <if test="studentReportUserIds != null">
        student_report_user_ids = #{studentReportUserIds,jdbcType=VARCHAR},
      </if>
      <if test="staffReportIdentify != null">
        staff_report_identify = #{staffReportIdentify,jdbcType=VARCHAR},
      </if>
      <if test="staffReportUserIds != null">
        staff_report_user_ids = #{staffReportUserIds,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where school_id = #{schoolId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hy.infoReport.common.entity.IrReportConfig">
    update ir_report_config
    set student_report_identify = #{studentReportIdentify,jdbcType=VARCHAR},
      student_report_user_ids = #{studentReportUserIds,jdbcType=VARCHAR},
      staff_report_identify = #{staffReportIdentify,jdbcType=VARCHAR},
      staff_report_user_ids = #{staffReportUserIds,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP}
    where school_id = #{schoolId,jdbcType=VARCHAR}
  </update>
</mapper>