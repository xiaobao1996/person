<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hy.infoReport.common.mapper.IrConfigMapper">
  <resultMap id="BaseResultMap" type="cn.hy.infoReport.common.entity.IrConfig">
    <id column="school_id" jdbcType="VARCHAR" property="schoolId" />
    <result column="temperature_low_limit" jdbcType="DECIMAL" property="temperatureLowLimit" />
    <result column="no_pass" jdbcType="TINYINT" property="noPass" />
    <result column="device_alarm" jdbcType="TINYINT" property="deviceAlarm" />
    <result column="notify_continuous_number" jdbcType="INTEGER" property="notifyContinuousNumber" />
    <result column="mode" jdbcType="TINYINT" property="mode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    school_id, temperature_low_limit, no_pass, device_alarm, notify_continuous_number, 
    mode
  </sql>
  <select id="selectByExample" parameterType="cn.hy.infoReport.common.entity.IrConfigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ir_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ir_config
    where school_id = #{schoolId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ir_config
    where school_id = #{schoolId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.hy.infoReport.common.entity.IrConfigExample">
    delete from ir_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hy.infoReport.common.entity.IrConfig">
    insert into ir_config (school_id, temperature_low_limit, no_pass, 
      device_alarm, notify_continuous_number, mode
      )
    values (#{schoolId,jdbcType=VARCHAR}, #{temperatureLowLimit,jdbcType=DECIMAL}, #{noPass,jdbcType=TINYINT}, 
      #{deviceAlarm,jdbcType=TINYINT}, #{notifyContinuousNumber,jdbcType=INTEGER}, #{mode,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.hy.infoReport.common.entity.IrConfig">
    insert into ir_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="temperatureLowLimit != null">
        temperature_low_limit,
      </if>
      <if test="noPass != null">
        no_pass,
      </if>
      <if test="deviceAlarm != null">
        device_alarm,
      </if>
      <if test="notifyContinuousNumber != null">
        notify_continuous_number,
      </if>
      <if test="mode != null">
        mode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="schoolId != null">
        #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="temperatureLowLimit != null">
        #{temperatureLowLimit,jdbcType=DECIMAL},
      </if>
      <if test="noPass != null">
        #{noPass,jdbcType=TINYINT},
      </if>
      <if test="deviceAlarm != null">
        #{deviceAlarm,jdbcType=TINYINT},
      </if>
      <if test="notifyContinuousNumber != null">
        #{notifyContinuousNumber,jdbcType=INTEGER},
      </if>
      <if test="mode != null">
        #{mode,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hy.infoReport.common.entity.IrConfigExample" resultType="java.lang.Long">
    select count(*) from ir_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ir_config
    <set>
      <if test="record.schoolId != null">
        school_id = #{record.schoolId,jdbcType=VARCHAR},
      </if>
      <if test="record.temperatureLowLimit != null">
        temperature_low_limit = #{record.temperatureLowLimit,jdbcType=DECIMAL},
      </if>
      <if test="record.noPass != null">
        no_pass = #{record.noPass,jdbcType=TINYINT},
      </if>
      <if test="record.deviceAlarm != null">
        device_alarm = #{record.deviceAlarm,jdbcType=TINYINT},
      </if>
      <if test="record.notifyContinuousNumber != null">
        notify_continuous_number = #{record.notifyContinuousNumber,jdbcType=INTEGER},
      </if>
      <if test="record.mode != null">
        mode = #{record.mode,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ir_config
    set school_id = #{record.schoolId,jdbcType=VARCHAR},
      temperature_low_limit = #{record.temperatureLowLimit,jdbcType=DECIMAL},
      no_pass = #{record.noPass,jdbcType=TINYINT},
      device_alarm = #{record.deviceAlarm,jdbcType=TINYINT},
      notify_continuous_number = #{record.notifyContinuousNumber,jdbcType=INTEGER},
      mode = #{record.mode,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hy.infoReport.common.entity.IrConfig">
    update ir_config
    <set>
      <if test="temperatureLowLimit != null">
        temperature_low_limit = #{temperatureLowLimit,jdbcType=DECIMAL},
      </if>
      <if test="noPass != null">
        no_pass = #{noPass,jdbcType=TINYINT},
      </if>
      <if test="deviceAlarm != null">
        device_alarm = #{deviceAlarm,jdbcType=TINYINT},
      </if>
      <if test="notifyContinuousNumber != null">
        notify_continuous_number = #{notifyContinuousNumber,jdbcType=INTEGER},
      </if>
      <if test="mode != null">
        mode = #{mode,jdbcType=TINYINT},
      </if>
    </set>
    where school_id = #{schoolId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hy.infoReport.common.entity.IrConfig">
    update ir_config
    set temperature_low_limit = #{temperatureLowLimit,jdbcType=DECIMAL},
      no_pass = #{noPass,jdbcType=TINYINT},
      device_alarm = #{deviceAlarm,jdbcType=TINYINT},
      notify_continuous_number = #{notifyContinuousNumber,jdbcType=INTEGER},
      mode = #{mode,jdbcType=TINYINT}
    where school_id = #{schoolId,jdbcType=VARCHAR}
  </update>
</mapper>