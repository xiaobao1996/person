<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hy.infoReport.common.mapper.IrMonitorHistoryMapper">
  <resultMap id="BaseResultMap" type="cn.hy.infoReport.common.entity.IrMonitorHistory">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="monitor_date" jdbcType="DATE" property="monitorDate" />
    <result column="monitor_datetime" jdbcType="TIMESTAMP" property="monitorDatetime" />
    <result column="monitor_user_id" jdbcType="VARCHAR" property="monitorUserId" />
    <result column="monitor_user_name" jdbcType="VARCHAR" property="monitorUserName" />
    <result column="monitor_device" jdbcType="VARCHAR" property="monitorDevice" />
    <result column="monitor_place" jdbcType="VARCHAR" property="monitorPlace" />
    <result column="temperature" jdbcType="DECIMAL" property="temperature" />
    <result column="source" jdbcType="TINYINT" property="source" />
    <result column="school_id" jdbcType="VARCHAR" property="schoolId" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, monitor_date, monitor_datetime, monitor_user_id, monitor_user_name,
    monitor_device, monitor_place, temperature, source, school_id, create_at
  </sql>
  <select id="selectByExample" parameterType="cn.hy.infoReport.common.entity.IrMonitorHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ir_monitor_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ir_monitor_history
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ir_monitor_history
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.hy.infoReport.common.entity.IrMonitorHistoryExample">
    delete from ir_monitor_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hy.infoReport.common.entity.IrMonitorHistory">
    insert into ir_monitor_history (id, user_id, monitor_date,
      monitor_datetime, monitor_user_id, monitor_user_name,
      monitor_device, monitor_place, temperature,
      source, school_id, create_at
      )
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{monitorDate,jdbcType=DATE},
      #{monitorDatetime,jdbcType=TIMESTAMP}, #{monitorUserId,jdbcType=VARCHAR}, #{monitorUserName,jdbcType=VARCHAR},
      #{monitorDevice,jdbcType=VARCHAR}, #{monitorPlace,jdbcType=VARCHAR}, #{temperature,jdbcType=DECIMAL},
      #{source,jdbcType=TINYINT}, #{schoolId,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.hy.infoReport.common.entity.IrMonitorHistory">
    insert into ir_monitor_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="monitorDate != null">
        monitor_date,
      </if>
      <if test="monitorDatetime != null">
        monitor_datetime,
      </if>
      <if test="monitorUserId != null">
        monitor_user_id,
      </if>
      <if test="monitorUserName != null">
        monitor_user_name,
      </if>
      <if test="monitorDevice != null">
        monitor_device,
      </if>
      <if test="monitorPlace != null">
        monitor_place,
      </if>
      <if test="temperature != null">
        temperature,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="monitorDate != null">
        #{monitorDate,jdbcType=DATE},
      </if>
      <if test="monitorDatetime != null">
        #{monitorDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="monitorUserId != null">
        #{monitorUserId,jdbcType=VARCHAR},
      </if>
      <if test="monitorUserName != null">
        #{monitorUserName,jdbcType=VARCHAR},
      </if>
      <if test="monitorDevice != null">
        #{monitorDevice,jdbcType=VARCHAR},
      </if>
      <if test="monitorPlace != null">
        #{monitorPlace,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null">
        #{temperature,jdbcType=DECIMAL},
      </if>
      <if test="source != null">
        #{source,jdbcType=TINYINT},
      </if>
      <if test="schoolId != null">
        #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hy.infoReport.common.entity.IrMonitorHistoryExample" resultType="java.lang.Long">
    select count(*) from ir_monitor_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ir_monitor_history
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.monitorDate != null">
        monitor_date = #{record.monitorDate,jdbcType=DATE},
      </if>
      <if test="record.monitorDatetime != null">
        monitor_datetime = #{record.monitorDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.monitorUserId != null">
        monitor_user_id = #{record.monitorUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.monitorUserName != null">
        monitor_user_name = #{record.monitorUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.monitorDevice != null">
        monitor_device = #{record.monitorDevice,jdbcType=VARCHAR},
      </if>
      <if test="record.monitorPlace != null">
        monitor_place = #{record.monitorPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.temperature != null">
        temperature = #{record.temperature,jdbcType=DECIMAL},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=TINYINT},
      </if>
      <if test="record.schoolId != null">
        school_id = #{record.schoolId,jdbcType=VARCHAR},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ir_monitor_history
    set id = #{record.id,jdbcType=VARCHAR},
    user_id = #{record.userId,jdbcType=VARCHAR},
    monitor_date = #{record.monitorDate,jdbcType=DATE},
    monitor_datetime = #{record.monitorDatetime,jdbcType=TIMESTAMP},
    monitor_user_id = #{record.monitorUserId,jdbcType=VARCHAR},
    monitor_user_name = #{record.monitorUserName,jdbcType=VARCHAR},
    monitor_device = #{record.monitorDevice,jdbcType=VARCHAR},
    monitor_place = #{record.monitorPlace,jdbcType=VARCHAR},
    temperature = #{record.temperature,jdbcType=DECIMAL},
    source = #{record.source,jdbcType=TINYINT},
    school_id = #{record.schoolId,jdbcType=VARCHAR},
    create_at = #{record.createAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hy.infoReport.common.entity.IrMonitorHistory">
    update ir_monitor_history
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="monitorDate != null">
        monitor_date = #{monitorDate,jdbcType=DATE},
      </if>
      <if test="monitorDatetime != null">
        monitor_datetime = #{monitorDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="monitorUserId != null">
        monitor_user_id = #{monitorUserId,jdbcType=VARCHAR},
      </if>
      <if test="monitorUserName != null">
        monitor_user_name = #{monitorUserName,jdbcType=VARCHAR},
      </if>
      <if test="monitorDevice != null">
        monitor_device = #{monitorDevice,jdbcType=VARCHAR},
      </if>
      <if test="monitorPlace != null">
        monitor_place = #{monitorPlace,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null">
        temperature = #{temperature,jdbcType=DECIMAL},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=TINYINT},
      </if>
      <if test="schoolId != null">
        school_id = #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hy.infoReport.common.entity.IrMonitorHistory">
    update ir_monitor_history
    set user_id = #{userId,jdbcType=VARCHAR},
      monitor_date = #{monitorDate,jdbcType=DATE},
      monitor_datetime = #{monitorDatetime,jdbcType=TIMESTAMP},
      monitor_user_id = #{monitorUserId,jdbcType=VARCHAR},
      monitor_user_name = #{monitorUserName,jdbcType=VARCHAR},
      monitor_device = #{monitorDevice,jdbcType=VARCHAR},
      monitor_place = #{monitorPlace,jdbcType=VARCHAR},
      temperature = #{temperature,jdbcType=DECIMAL},
      source = #{source,jdbcType=TINYINT},
      school_id = #{schoolId,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="findTbListBy" resultType="cn.hy.infoReport.common.entity.IrMonitorHistory">
    SELECT
        mh.*,
        psTmp.name AS username,
        pc.class_name AS className
    FROM
        ir_monitor_history mh
        INNER JOIN (
            SELECT
                user_id,
                class_id,
                name
            FROM
                pms_student
            WHERE
                school_id = #{schoolId}
            <if test="name != null and name != ''">
                AND name LIKE CONCAT("%", #{name},"%")
            </if>
            <if test="classId != null and classId != ''">
                AND class_id = #{classId}
            </if>
        ) psTmp ON mh.user_id = psTmp.user_id
        LEFT JOIN pms_class pc ON pc.office_id = psTmp.class_id AND pc.school_id = #{schoolId}
    WHERE
        mh.school_id = #{schoolId}
        AND source = 3
    <if test="startDate != null">
        AND mh.monitor_datetime &gt;= #{startDate}
    </if>
    <if test="endDate != null">
        AND mh.monitor_datetime &lt;= #{endDate}
    </if>
        ORDER BY mh.monitor_datetime DESC
  </select>
</mapper>
