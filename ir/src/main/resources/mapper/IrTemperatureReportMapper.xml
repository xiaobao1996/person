<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hy.infoReport.common.mapper.IrTemperatureReportMapper">
  <resultMap id="BaseResultMap" type="cn.hy.infoReport.common.entity.IrTemperatureReport">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="office_name" jdbcType="VARCHAR" property="officeName" />
    <result column="office_id" jdbcType="VARCHAR" property="officeId" />
    <result column="identity" jdbcType="TINYINT" property="identity" />
    <result column="temperature" jdbcType="DECIMAL" property="temperature" />
    <result column="other_symptom" jdbcType="TINYINT" property="otherSymptom" />
    <result column="current_location" jdbcType="VARCHAR" property="currentLocation" />
    <result column="contact" jdbcType="TINYINT" property="contact" />
    <result column="arrive_other_area" jdbcType="TINYINT" property="arriveOtherArea" />
    <result column="other_info" jdbcType="VARCHAR" property="otherInfo" />
    <result column="abnormal" jdbcType="TINYINT" property="abnormal" />
    <result column="school_id" jdbcType="VARCHAR" property="schoolId" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, mobile, user_name, user_id, office_name, office_id, identity, temperature, other_symptom,
    current_location, contact, arrive_other_area, other_info, abnormal, school_id, create_at,
    create_by, update_at, update_by, status
  </sql>
  <select id="selectByExample" parameterType="cn.hy.infoReport.common.entity.IrTemperatureReportExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ir_temperature_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ir_temperature_report
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ir_temperature_report
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.hy.infoReport.common.entity.IrTemperatureReportExample">
    delete from ir_temperature_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hy.infoReport.common.entity.IrTemperatureReport">
    insert into ir_temperature_report (id, mobile, user_name,
      user_id, office_name, office_id,
      identity, temperature, other_symptom,
      current_location, contact, arrive_other_area,
      other_info, abnormal, school_id,
      create_at, create_by, update_at,
      update_by, status)
    values (#{id,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
      #{userId,jdbcType=VARCHAR}, #{officeName,jdbcType=VARCHAR}, #{officeId,jdbcType=VARCHAR},
      #{identity,jdbcType=TINYINT}, #{temperature,jdbcType=DECIMAL}, #{otherSymptom,jdbcType=TINYINT},
      #{currentLocation,jdbcType=VARCHAR}, #{contact,jdbcType=TINYINT}, #{arriveOtherArea,jdbcType=TINYINT},
      #{otherInfo,jdbcType=VARCHAR}, #{abnormal,jdbcType=TINYINT}, #{schoolId,jdbcType=VARCHAR},
      #{createAt,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{updateAt,jdbcType=TIMESTAMP},
      #{updateBy,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.hy.infoReport.common.entity.IrTemperatureReport">
    insert into ir_temperature_report
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="officeName != null">
        office_name,
      </if>
      <if test="officeId != null">
        office_id,
      </if>
      <if test="identity != null">
        identity,
      </if>
      <if test="temperature != null">
        temperature,
      </if>
      <if test="otherSymptom != null">
        other_symptom,
      </if>
      <if test="currentLocation != null">
        current_location,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="arriveOtherArea != null">
        arrive_other_area,
      </if>
      <if test="otherInfo != null">
        other_info,
      </if>
      <if test="abnormal != null">
        abnormal,
      </if>
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="officeName != null">
        #{officeName,jdbcType=VARCHAR},
      </if>
      <if test="officeId != null">
        #{officeId,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=TINYINT},
      </if>
      <if test="temperature != null">
        #{temperature,jdbcType=DECIMAL},
      </if>
      <if test="otherSymptom != null">
        #{otherSymptom,jdbcType=TINYINT},
      </if>
      <if test="currentLocation != null">
        #{currentLocation,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=TINYINT},
      </if>
      <if test="arriveOtherArea != null">
        #{arriveOtherArea,jdbcType=TINYINT},
      </if>
      <if test="otherInfo != null">
        #{otherInfo,jdbcType=VARCHAR},
      </if>
      <if test="abnormal != null">
        #{abnormal,jdbcType=TINYINT},
      </if>
      <if test="schoolId != null">
        #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hy.infoReport.common.entity.IrTemperatureReportExample" resultType="java.lang.Long">
    select count(*) from ir_temperature_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ir_temperature_report
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.officeName != null">
        office_name = #{record.officeName,jdbcType=VARCHAR},
      </if>
      <if test="record.officeId != null">
        office_id = #{record.officeId,jdbcType=VARCHAR},
      </if>
      <if test="record.identity != null">
        identity = #{record.identity,jdbcType=TINYINT},
      </if>
      <if test="record.temperature != null">
        temperature = #{record.temperature,jdbcType=DECIMAL},
      </if>
      <if test="record.otherSymptom != null">
        other_symptom = #{record.otherSymptom,jdbcType=TINYINT},
      </if>
      <if test="record.currentLocation != null">
        current_location = #{record.currentLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=TINYINT},
      </if>
      <if test="record.arriveOtherArea != null">
        arrive_other_area = #{record.arriveOtherArea,jdbcType=TINYINT},
      </if>
      <if test="record.otherInfo != null">
        other_info = #{record.otherInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.abnormal != null">
        abnormal = #{record.abnormal,jdbcType=TINYINT},
      </if>
      <if test="record.schoolId != null">
        school_id = #{record.schoolId,jdbcType=VARCHAR},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ir_temperature_report
    set id = #{record.id,jdbcType=VARCHAR},
    mobile = #{record.mobile,jdbcType=VARCHAR},
    user_name = #{record.userName,jdbcType=VARCHAR},
    user_id = #{record.userId,jdbcType=VARCHAR},
    office_name = #{record.officeName,jdbcType=VARCHAR},
    office_id = #{record.officeId,jdbcType=VARCHAR},
    identity = #{record.identity,jdbcType=TINYINT},
    temperature = #{record.temperature,jdbcType=DECIMAL},
    other_symptom = #{record.otherSymptom,jdbcType=TINYINT},
    current_location = #{record.currentLocation,jdbcType=VARCHAR},
    contact = #{record.contact,jdbcType=TINYINT},
    arrive_other_area = #{record.arriveOtherArea,jdbcType=TINYINT},
    other_info = #{record.otherInfo,jdbcType=VARCHAR},
    abnormal = #{record.abnormal,jdbcType=TINYINT},
    school_id = #{record.schoolId,jdbcType=VARCHAR},
    create_at = #{record.createAt,jdbcType=TIMESTAMP},
    create_by = #{record.createBy,jdbcType=VARCHAR},
    update_at = #{record.updateAt,jdbcType=TIMESTAMP},
    update_by = #{record.updateBy,jdbcType=VARCHAR},
    status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hy.infoReport.common.entity.IrTemperatureReport">
    update ir_temperature_report
    <set>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="officeName != null">
        office_name = #{officeName,jdbcType=VARCHAR},
      </if>
      <if test="officeId != null">
        office_id = #{officeId,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        identity = #{identity,jdbcType=TINYINT},
      </if>
      <if test="temperature != null">
        temperature = #{temperature,jdbcType=DECIMAL},
      </if>
      <if test="otherSymptom != null">
        other_symptom = #{otherSymptom,jdbcType=TINYINT},
      </if>
      <if test="currentLocation != null">
        current_location = #{currentLocation,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=TINYINT},
      </if>
      <if test="arriveOtherArea != null">
        arrive_other_area = #{arriveOtherArea,jdbcType=TINYINT},
      </if>
      <if test="otherInfo != null">
        other_info = #{otherInfo,jdbcType=VARCHAR},
      </if>
      <if test="abnormal != null">
        abnormal = #{abnormal,jdbcType=TINYINT},
      </if>
      <if test="schoolId != null">
        school_id = #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hy.infoReport.common.entity.IrTemperatureReport">
    update ir_temperature_report
    set mobile = #{mobile,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      office_name = #{officeName,jdbcType=VARCHAR},
      office_id = #{officeId,jdbcType=VARCHAR},
      identity = #{identity,jdbcType=TINYINT},
      temperature = #{temperature,jdbcType=DECIMAL},
      other_symptom = #{otherSymptom,jdbcType=TINYINT},
      current_location = #{currentLocation,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=TINYINT},
      arrive_other_area = #{arriveOtherArea,jdbcType=TINYINT},
      other_info = #{otherInfo,jdbcType=VARCHAR},
      abnormal = #{abnormal,jdbcType=TINYINT},
      school_id = #{schoolId,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="list" parameterType="cn.hy.infoReport.common.entity.IrTemperatureReport" resultMap="BaseResultMap">
    SELECT
    irtr.*
    FROM
      ir_temperature_report irtr
    <if test="province != null and province != '' and city != '' and city != null">
      INNER JOIN (
      SELECT
        DISTINCT report_id
      FROM
        ir_user_arrive_area iruaa
      <where>
        <if test="area != null and area != ''">
          AND iruaa.area = #{area}
        </if>
        <if test="province != null and province != ''">
          AND iruaa.province = #{province}
        </if>
        <if test="city != null and city != ''">
          AND iruaa.city = #{city}
        </if>
      </where>
      ) areaTmp ON areaTmp.report_id = irtr.id
    </if>
    WHERE
      irtr.school_id=#{schoolId}
        AND irtr.status= 1 and irtr.identity=#{identity}
      <if test="userName != null and userName != ''">
        AND irtr.user_name LIKE CONCAT("%", #{userName}, "%")
      </if>
      <if test="officeId != null and officeId != ''">
        AND irtr.office_id LIKE CONCAT("%", #{officeId}, "%")
      </if>
      <if test="temperature != null and temperature != ''">
        AND irtr.temperature > #{temperature}
      </if>
      <if test="otherSymptom != null">
        AND irtr.other_symptom = #{otherSymptom}
      </if>
      <if test="currentLocation != null and currentLocation != ''">
        AND irtr.current_location LIKE CONCAT("%", #{currentLocation}, "%")
      </if>
      <if test="contact != null">
        AND irtr.contact = #{contact}
      </if>
      <if test="mobile != null and mobile != ''">
        AND irtr.mobile LIKE CONCAT("%", #{mobile}, "%")
      </if>
      <if test="startTime != null and endTime != null">
        AND irtr.create_at between #{startTime} and #{endTime}
      </if>
      <if test="startTime != null and endTime == null">
        AND irtr.create_at &gt; #{startTime}
      </if>
      <if test="startTime == null and endTime != null">
        AND irtr.create_at &lt; #{endTime}
      </if>
      <if test="arriveOtherArea != null">
        AND irtr.arrive_other_area= #{arriveOtherArea}
      </if>
      ORDER BY irtr.create_at desc
  </select>
  <select id="findAbnormalSimplifyInfo" resultType="cn.hy.infoReport.module.business.vo.IrTemperatureReportSimplifyVo">
    SELECT
        user_id,
        data_time
    FROM
        ir_temperature_report
    WHERE
        school_id = #{schoolId}
        AND user_id IN (
            <foreach collection="userIdList" item="userId" separator=",">
              #{userId}
            </foreach>
        )
        AND data_time BETWEEN #{startDate} AND #{endDate}
        AND abnormal = #{abnormal}
        AND status = 1
  </select>


  <select id="findAbunusualCountByIdentityAndSchoolId" parameterType="cn.hy.infoReport.common.entity.IrTemperatureReport" resultType="java.lang.Long">
    SELECT
    count(*)
    FROM
    ir_temperature_report irtr
    <if test="province != null and province != '' and city != '' and city != null">
      INNER JOIN (
      SELECT
      DISTINCT report_id
      FROM
      ir_user_arrive_area iruaa
      <where>
        <if test="area != null and area != ''">
          AND iruaa.area = #{area}
        </if>
        <if test="province != null and province != ''">
          AND iruaa.province = #{province}
        </if>
        <if test="city != null and city != ''">
          AND iruaa.city = #{city}
        </if>
      </where>
      ) areaTmp ON areaTmp.report_id = irtr.id
    </if>
    WHERE
    irtr.school_id=#{schoolId}
    AND irtr.status= 1 and irtr.identity=#{identity}
    AND irtr.abnormal=#{abnormal}
    <if test="userName != null and userName != ''">
      AND irtr.user_name LIKE CONCAT("%", #{userName}, "%")
    </if>
    <if test="officeId != null and officeId != ''">
      AND irtr.office_id LIKE CONCAT("%", #{officeId}, "%")
    </if>
    <if test="temperature != null and temperature != ''">
      AND irtr.temperature > #{temperature}
    </if>
    <if test="otherSymptom != null">
      AND irtr.other_symptom = #{otherSymptom}
    </if>
    <if test="currentLocation != null and currentLocation != ''">
      AND irtr.current_location LIKE CONCAT("%", #{currentLocation}, "%")
    </if>
    <if test="contact != null">
      AND irtr.contact = #{contact}
    </if>
    <if test="mobile != null and mobile != ''">
      AND irtr.mobile LIKE CONCAT("%", #{mobile}, "%")
    </if>
    <if test="startTime != null and endTime != null">
      AND irtr.create_at between #{startTime} and #{endTime}
    </if>
    <if test="startTime != null and endTime == null">
      AND irtr.create_at &gt; #{startTime}
    </if>
    <if test="startTime == null and endTime != null">
      AND irtr.create_at &lt; #{endTime}
    </if>
    <if test="arriveOtherArea != null">
      AND irtr.arrive_other_area= #{arriveOtherArea}
    </if>
    ORDER BY irtr.create_at desc
  </select>

</mapper>
